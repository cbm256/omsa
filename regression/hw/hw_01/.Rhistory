knitr::opts_chunk$set(echo = TRUE, fig.pos= "H")
```{r data}
data = read.csv("Highway1.csv", head = TRUE, sep = ",")
rate = as.numeric(data[,2])
signs = as.numeric(data[,6])
plot(signs, rate)
r_squared = cor(signs, rate)
r_squared
round(cor(signs, rate),2)
plot(signs, rate)
plot(log(signs), rate)
plot(log(signs), log(rate))
plot(signs, log(rate))
plot(log(signs), log(rate))
cor
cor(log(signs), log(rate))
cor((signs), (rate))
cor((signs), log(rate))
cor(log(signs), (rate))
cor(log(signs), log(rate))
plot(log(signs), log(rate))
plot((signs), (rate))
plot(log(signs), log(rate))
round(cor(log(signs), log(rate)),2)
round(cor(log(signs), log(rate)),2)
round(cor(log(signs), log(rate)),3)
round(cor(signs, rate),3)
model = lm(rate ~ signs)
summary(model)
values(model)
model.values
model$fitted.values
model$coefficients
model$coefficients$signs
model$coefficients[1]
model$coefficients[2]
model$coefficients[2][1]
coef(summary(model))[, 2]
coef(summary(model))[, 2][2]
confint(model, level = .95)
1-pt(4.6,37)
p1 = plot(signs, rate)
residuals(model)
p1 = plot(signs, residuals(model))
model_log = lm(log(rate) ~ log(signs))
p1 = plot(signs, residuals(model_log))
p1 = plot(signs, residuals(model))
p1 = plot(signs, residuals(model))
p1 = plot(signs, rate)
plot(model$fitted, model$residuals)
plot(signs, rate)
install.packages("car")
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
qqplot(model$residuals)
qqPlot(model$residuals)
qqPlot(model_log$residuals)
hist(model$residuals)
hist(model_log$residuals)
hist(model$residuals)
par(mfrow=c(2,2))
p1 = plot(signs, rate)
p2 = plot(model$fitted, model$residuals)
p3 = qqPlot(model_log$residuals)
p4 = hist(model$residuals)
p1 = plot(signs, rate)
p2 = plot(model$fitted, model$residuals)
p3 = qqPlot(model$residuals)
p4 = hist(model$residuals)
par(mfrow=c(2,2))
p1 = plot(signs, rate)
p2 = plot(model$fitted, model$residuals)
p3 = qqPlot(model$residuals)
p4 = hist(model$residuals)
par(mfrow=c(2,2))
p1 = plot(log(signs), log(rate))
p2 = plot(model_log$fitted, model_log$residuals)
p3 = qqPlot(model_log$residuals)
p4 = hist(model_log$residuals)
predict.lm(model, 1.25, interval="predict", level = .95)
new = data.frame(signs = 1.25)
predict.lm(model, new, interval="predict", level = .95)
log(5)
exp(log(5))
exp(predict.lm(model_log, new, interval="predict", level = .95))
exp(predict.lm(model_log, new, interval="predict", level = .95))
predict.lm(model_log, new, interval="predict", level = .95)
exp(predict.lm(model_log, new, interval="predict", level = .95))
exp(predict.lm(model_log, new, interval="predict", level = .95))
predict.lm(model, new, interval="predict", level = .95)
exp(predict.lm(model_log, new, interval="predict", level = .95))
predict.lm(model, new, interval="predict", level = .95)
data = read.csv("Highway1.csv", head = TRUE, sep = ",")
rate = as.numeric(data[,2])
signs = as.numeric(data[,6])
cor_coef = round(cor(signs, rate),3)
cor_coef_log = round(cor(log(signs), log(rate)),3)
plot(signs, rate)
plot((signs), (rate))
plot(log(signs), log(rate))
model = lm(rate ~ signs)
model_log = lm(log(rate) ~ log(signs))
coefs = model$coefficients
slope = round(coefs[2],3)
intercept = round(coefs[1], 3)
summary(model)
1-pt(4.6,37)
confint(model, level = .95)
library(car)
par(mfrow=c(2,2))
p1 = plot(signs, rate)
p2 = plot(model$fitted, model$residuals)
p3 = qqPlot(model$residuals)
p4 = hist(model$residuals)
par(mfrow=c(2,2))
p1 = plot(log(signs), log(rate))
p2 = plot(model_log$fitted, model_log$residuals)
p3 = qqPlot(model_log$residuals)
p4 = hist(model_log$residuals)
exp(predict.lm(model_log, new, interval="predict", level = .95))
new = data.frame(signs = 1.25)
exp(predict.lm(model_log, new, interval="predict", level = .95))
predict.lm(model, new, interval="predict", level = .95)
