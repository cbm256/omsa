#Inspect BodyWt
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
abline(lm(NonDreaming ~ BrainWt, data = data))
# Transform BrainWt
plot(log(BrainWt), NonDreaming)
abline(lm(NonDreaming ~log(BrainWt), data = data))
#Inspect LifeSpan
plot(LifeSpan, NonDreaming)
abline(lm(NonDreaming ~ LifeSpan, data = data))
# Transform LifeSpan
plot(log(LifeSpan), NonDreaming)
abline(lm(NonDreaming ~log(LifeSpan), data = data))
#Inspect Gestation
plot(Gestation, NonDreaming)
abline(lm(NonDreaming ~ Gestation, data = data))
# Transform Gestation
plot(log(Gestation), NonDreaming)
abline(lm(NonDreaming ~log(Gestation), data = data))
par(mfrow=c(4,2))
par(fig=c(7,10,6,10)/10))
par(mfrow=c(4,2))
par(fig=c(7,10,6,10)/10))
par(mfrow=c(4,2))
par(fig=c(7,10,6,10)/10)
#Inspect BodyWt
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
abline(lm(NonDreaming ~ BrainWt, data = data))
# Transform BrainWt
plot(log(BrainWt), NonDreaming)
abline(lm(NonDreaming ~log(BrainWt), data = data))
#Inspect LifeSpan
plot(LifeSpan, NonDreaming)
abline(lm(NonDreaming ~ LifeSpan, data = data))
# Transform LifeSpan
plot(log(LifeSpan), NonDreaming)
abline(lm(NonDreaming ~log(LifeSpan), data = data))
#Inspect Gestation
plot(Gestation, NonDreaming)
abline(lm(NonDreaming ~ Gestation, data = data))
# Transform Gestation
plot(log(Gestation), NonDreaming)
abline(lm(NonDreaming ~log(Gestation), data = data))
par(mfrow=c(4,2))
#Inspect BodyWt
dev.new(width=5, height=4)
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
abline(lm(NonDreaming ~ BrainWt, data = data))
# Transform BrainWt
plot(log(BrainWt), NonDreaming)
abline(lm(NonDreaming ~log(BrainWt), data = data))
#Inspect LifeSpan
plot(LifeSpan, NonDreaming)
abline(lm(NonDreaming ~ LifeSpan, data = data))
# Transform LifeSpan
plot(log(LifeSpan), NonDreaming)
abline(lm(NonDreaming ~log(LifeSpan), data = data))
#Inspect Gestation
plot(Gestation, NonDreaming)
abline(lm(NonDreaming ~ Gestation, data = data))
# Transform Gestation
plot(log(Gestation), NonDreaming)
abline(lm(NonDreaming ~log(Gestation), data = data))
par(mfrow=c(4,2))
#Inspect BodyWt
dev.new(width=3, height=3)
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
dev.new(width=3, height=3)
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
abline(lm(NonDreaming ~ BrainWt, data = data))
# Transform BrainWt
plot(log(BrainWt), NonDreaming)
abline(lm(NonDreaming ~log(BrainWt), data = data))
#Inspect LifeSpan
plot(LifeSpan, NonDreaming)
abline(lm(NonDreaming ~ LifeSpan, data = data))
# Transform LifeSpan
plot(log(LifeSpan), NonDreaming)
abline(lm(NonDreaming ~log(LifeSpan), data = data))
#Inspect Gestation
plot(Gestation, NonDreaming)
abline(lm(NonDreaming ~ Gestation, data = data))
# Transform Gestation
plot(log(Gestation), NonDreaming)
abline(lm(NonDreaming ~log(Gestation), data = data))
par(mfrow=c(4,2))
#Inspect BodyWt
dev.new(width=3, height=3)
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
dev.new(width=3, height=3)
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
abline(lm(NonDreaming ~ BrainWt, data = data))
# Transform BrainWt
plot(log(BrainWt), NonDreaming)
abline(lm(NonDreaming ~log(BrainWt), data = data))
#Inspect LifeSpan
plot(LifeSpan, NonDreaming)
abline(lm(NonDreaming ~ LifeSpan, data = data))
# Transform LifeSpan
plot(log(LifeSpan), NonDreaming)
abline(lm(NonDreaming ~log(LifeSpan), data = data))
#Inspect Gestation
plot(Gestation, NonDreaming)
abline(lm(NonDreaming ~ Gestation, data = data))
# Transform Gestation
plot(log(Gestation), NonDreaming)
abline(lm(NonDreaming ~log(Gestation), data = data))
par(mfrow=c(4,2))
#Inspect BodyWt
dev.new(width=1, height=1)
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
dev.new(width=1, height=1)
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
abline(lm(NonDreaming ~ BrainWt, data = data))
# Transform BrainWt
plot(log(BrainWt), NonDreaming)
abline(lm(NonDreaming ~log(BrainWt), data = data))
#Inspect LifeSpan
plot(LifeSpan, NonDreaming)
abline(lm(NonDreaming ~ LifeSpan, data = data))
# Transform LifeSpan
plot(log(LifeSpan), NonDreaming)
abline(lm(NonDreaming ~log(LifeSpan), data = data))
#Inspect Gestation
plot(Gestation, NonDreaming)
abline(lm(NonDreaming ~ Gestation, data = data))
# Transform Gestation
plot(log(Gestation), NonDreaming)
abline(lm(NonDreaming ~log(Gestation), data = data))
par(mfrow=c(4,2))
#Inspect BodyWt
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
abline(lm(NonDreaming ~ BrainWt, data = data))
# Transform BrainWt
plot(log(BrainWt), NonDreaming)
abline(lm(NonDreaming ~log(BrainWt), data = data))
#Inspect LifeSpan
plot(LifeSpan, NonDreaming)
abline(lm(NonDreaming ~ LifeSpan, data = data))
# Transform LifeSpan
plot(log(LifeSpan), NonDreaming)
abline(lm(NonDreaming ~log(LifeSpan), data = data))
#Inspect Gestation
plot(Gestation, NonDreaming)
abline(lm(NonDreaming ~ Gestation, data = data))
# Transform Gestation
plot(log(Gestation), NonDreaming)
abline(lm(NonDreaming ~log(Gestation), data = data))
par(mfrow=c(8,2))
#Inspect BodyWt
plot(BodyWt, NonDreaming)
par(mfrow=c(8,2))
#Inspect BodyWt
plot(BodyWt, NonDreaming)
par(mfrow=c(4,2))
#Inspect BodyWt
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
abline(lm(NonDreaming ~ BrainWt, data = data))
# Transform BrainWt
plot(log(BrainWt), NonDreaming)
abline(lm(NonDreaming ~log(BrainWt), data = data))
#Inspect LifeSpan
plot(LifeSpan, NonDreaming)
abline(lm(NonDreaming ~ LifeSpan, data = data))
# Transform LifeSpan
plot(log(LifeSpan), NonDreaming)
abline(lm(NonDreaming ~log(LifeSpan), data = data))
#Inspect Gestation
plot(Gestation, NonDreaming)
abline(lm(NonDreaming ~ Gestation, data = data))
# Transform Gestation
plot(log(Gestation), NonDreaming)
abline(lm(NonDreaming ~log(Gestation), data = data))
layout(mat = matrix(c(1, 2, 3, 4,5,6,7,8),
nrow = 4,
ncol = 2),
heights = c(2, 2),    # Heights of the two rows
widths = c(2, 2))
#Inspect BodyWt
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
layout(mat = matrix(c(1, 2, 3, 4,5,6,7,8),
nrow = 4,
ncol = 2),
heights = c(1, 1),    # Heights of the two rows
widths = c(1, 1))
#Inspect BodyWt
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
abline(lm(NonDreaming ~ BrainWt, data = data))
# Transform BrainWt
plot(log(BrainWt), NonDreaming)
abline(lm(NonDreaming ~log(BrainWt), data = data))
#Inspect LifeSpan
plot(LifeSpan, NonDreaming)
abline(lm(NonDreaming ~ LifeSpan, data = data))
# Transform LifeSpan
plot(log(LifeSpan), NonDreaming)
abline(lm(NonDreaming ~log(LifeSpan), data = data))
#Inspect Gestation
plot(Gestation, NonDreaming)
abline(lm(NonDreaming ~ Gestation, data = data))
# Transform Gestation
plot(log(Gestation), NonDreaming)
abline(lm(NonDreaming ~log(Gestation), data = data))
layout(mat = matrix(c(1, 2, 3, 4,5,6,7,8),
nrow = 4,
ncol = 2),
heights = c(2, 2),    # Heights of the two rows
widths = c(1, 1))
#Inspect BodyWt
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
layout(mat = matrix(c(1, 2, 3, 4,5,6,7,8),
nrow = 4,
ncol = 2),
heights = c(2, 2),    # Heights of the two rows
widths = c(1, 1))
#Inspect BodyWt
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
layout(mat = matrix(c(1, 2, 3, 4,5,6,7,8),
nrow = 4,
ncol = 2),
heights = c(2, 2),    # Heights of the two rows
widths = c(1, 1))
#Inspect BodyWt
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
layout(mat = matrix(c(1, 2, 3, 4,5,6,7,8),
nrow = 4,
ncol = 2),
heights = c(2, 2),    # Heights of the two rows
widths = c(1, 1))
#Inspect BodyWt
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
layout(mat = matrix(c(1, 2, 3, 4,5,6,7,8),
nrow = 4,
ncol = 2),
heights = c(2, 2),    # Heights of the two rows
widths = c(1, 1))
#Inspect BodyWt
plot(BodyWt, NonDreaming)
layout(mat = matrix(c(1, 2, 3, 4,5,6,7,8),
nrow = 4,
ncol = 2),
heights = c(2, 2),    # Heights of the two rows
widths = c(1, 1))
#Inspect BodyWt
plot(BodyWt, NonDreaming)
plot(BodyWt, NonDreaming)
abline(lm(NonDreaming ~ BodyWt, data = data))
# Transform BodyWt
plot(log(BodyWt), NonDreaming)
abline(lm(NonDreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, NonDreaming)
abline(lm(NonDreaming ~ BrainWt, data = data))
# Transform BrainWt
plot(log(BrainWt), NonDreaming)
abline(lm(NonDreaming ~log(BrainWt), data = data))
#Inspect LifeSpan
plot(LifeSpan, NonDreaming)
abline(lm(NonDreaming ~ LifeSpan, data = data))
# Transform LifeSpan
plot(log(LifeSpan), NonDreaming)
abline(lm(NonDreaming ~log(LifeSpan), data = data))
#Inspect Gestation
plot(Gestation, NonDreaming)
abline(lm(NonDreaming ~ Gestation, data = data))
# Transform Gestation
plot(log(Gestation), NonDreaming)
abline(lm(NonDreaming ~log(Gestation), data = data))
boxplot(NonDreaming ~ Predation, xlab = "Predation", ylab = "NonDreamy Sleep")
boxplot(NonDreaming ~ Exposure, xlab = "Exposure", ylab = "NonDreamy Sleep")
boxplot(NonDreaming ~ Danger, xlab = "Total Danger", ylab = "NonDreamy Sleep")
boxplot(NonDreaming ~ Predation, xlab = "Predation", ylab = "NonDreamy Sleep")
boxplot(NonDreaming ~ Predation, xlab = "Predation", ylab = "NonDreamy Sleep")
boxplot(NonDreaming ~ Exposure, xlab = "Exposure", ylab = "NonDreamy Sleep")
boxplot(NonDreaming ~ Danger, xlab = "Total Danger", ylab = "NonDreamy Sleep")
par(mfrow=c(3,1))
boxplot(NonDreaming ~ Predation, xlab = "Predation", ylab = "NonDreamy Sleep")
boxplot(NonDreaming ~ Exposure, xlab = "Exposure", ylab = "NonDreamy Sleep")
boxplot(NonDreaming ~ Danger, xlab = "Total Danger", ylab = "NonDreamy Sleep")
boxplot(NonDreaming ~ Predation, xlab = "Predation", ylab = "NonDreamy Sleep")
boxplot(NonDreaming ~ Exposure, xlab = "Exposure", ylab = "NonDreamy Sleep")
boxplot(NonDreaming ~ Danger, xlab = "Total Danger", ylab = "NonDreamy Sleep")
Predation
data
airs(Dreaming~BodyWt+BrainWt+LifeSpan+Gestation) #or plot(data)
pairs(Dreaming~BodyWt+BrainWt+LifeSpan+Gestation) #or plot(data)
Dreamingcor <- cor(data[c(2,3,7,8)],data[5])
Dreamingcor
plot(BodyWt, Dreaming)
abline(lm(Dreaming ~ BodyWt, data = data))
# Transform BodyWt
plot(log(BodyWt), Dreaming)
abline(lm(Dreaming ~log(BodyWt), data = data))
#Inspect BrainWt
plot(BrainWt, Dreaming)
abline(lm(Dreaming ~ BrainWt, data = data))
# Transform BrainWt
plot(log(BrainWt), Dreaming)
abline(lm(Dreaming ~log(BrainWt), data = data))
#Inspect LifeSpan
plot(LifeSpan, Dreaming)
abline(lm(Dreaming ~ LifeSpan, data = data))
# Transform LifeSpan
plot(log(LifeSpan), Dreaming)
abline(lm(Dreaming ~log(LifeSpan), data = data))
#Inspect Gestation
plot(Gestation, Dreaming)
abline(lm(Dreaming ~ Gestation, data = data))
# Transform Gestation
plot(log(Gestation), Dreaming)
abline(lm(Dreaming ~log(Gestation), data = data))
boxplot(Dreaming ~ Predation, xlab = "Predation", ylab = "Dreamy Sleep")
boxplot(Dreaming ~ Exposure, xlab = "Exposure", ylab = "Dreamy Sleep")
boxplot(Dreaming ~ Danger, xlab = "Total Danger", ylab = "Dreamy Sleep")
model3 <- lm(NonDreaming ~. -Species -Dreaming -TotalSleep, data = data)
summary(model3)
plot(model3, cook.levels = c(4/42,0.5,1))
pairs(NonDreaming ~. -Species -Dreaming -TotalSleep, data = data) #or plot(data)
```{r q3.5_linearity}
pairs(NonDreaming ~. -Species -Dreaming -TotalSleep, data = data) #or plot(data)
plot(cooks.distance(model3))
plot(cooks.distance(model3), type ='h')
plot(cooks.distance(model3), type ='h', col='red')
model3 <- lm(NonDreaming ~. -Species -Dreaming -TotalSleep, data = data)
summary(model3)
plot(model3, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(model3), type ='h', col='red')
model3a <- lm(log(NonDreaming) ~. -Species -Dreaming -TotalSleep, data = data)
summary(model3a)
plot(model3a, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(model3a), type ='h', col='red')
pairs(NonDreaming ~. -Species -Dreaming -TotalSleep, data = data) #or plot(data)
model3b <- lm(NonDreaming ~ log(BodyWt) +log(BrainWt) +log(LifeSpan) +log(Gestation) +Exposure +Predation +Danger, data = data)
summary(model3b)
plot(model3b, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(model3a), type ='h', col='red')
pairs(log(NonDreaming) ~. -Species -Dreaming -TotalSleep, data = data) #or plot(data)
plot(cooks.distance(model3b), type ='h', col='red')
model3b <- lm(NonDreaming ~ log(BodyWt) +log(BrainWt) +log(LifeSpan) +log(Gestation) +Exposure +Predation +Danger, data = data)
summary(model3b)
plot(model3b, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(model3b), type ='h', col='red')
model3c <- lm(NonDreaming ~ log(BodyWt) +log(BrainWt) +log(LifeSpan) +log(Gestation) +Danger, data = data)
summary(model3c)
plot(model3c, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(model3c), type ='h', col='red')
model3c <- lm(NonDreaming ~ log(BodyWt) +log(BrainWt) +log(LifeSpan) +log(Gestation) +Danger, data = data)
summary(model3c)
plot(model3c, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(model3c), type ='h', col='red')
finalmodel <- lm(log(NonDreaming) ~ log(BodyWt) + log(BrainWt) + log(LifeSpan) + log(Gestation) + Danger, data = data)
summary(finalmodel)
plot(finalmodel, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(finalmodel), type ='h', col='red')
model4 <- lm(Dreaming ~. -Species -Dreaming -TotalSleep, data = data)
summary(model4)
plot(model4, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(model4), type ='h', col='red')
model4 <- lm(Dreaming ~. -Species -NonDreaming -TotalSleep, data = data)
summary(model4)
plot(model4, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(model4), type ='h', col='red')
model4 <- lm(Dreaming ~. -Species -NonDreaming -TotalSleep, data = data2)
data2 = data[-11, ]
data2 = data[-11, ]
model4 <- lm(Dreaming ~. -Species -NonDreaming -TotalSleep, data = data2)
summary(model4)
plot(model4, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(model4), type ='h', col='red')
model4a <- lm(log(Dreaming) ~. -Species -Dreaming -TotalSleep, data = data)
model4a <- lm(log(Dreaming) ~. -Species -NonDreaming -TotalSleep, data = data2)
summary(model4a)
plot(model4a, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(model4a), type ='h', col='red')
model3b <- lm(Dreaming ~ log(BodyWt) +log(BrainWt) +log(LifeSpan) +log(Gestation) +Exposure +Predation +Danger, data = data2)
summary(model4b)
model4b <- lm(Dreaming ~ log(BodyWt) +log(BrainWt) +log(LifeSpan) +log(Gestation) +Exposure +Predation +Danger, data = data2)
summary(model4b)
plot(model4b, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(model4b), type ='h', col='red')
model4c <- lm(NonDreaming ~ log(BodyWt) +log(BrainWt) +log(LifeSpan) +log(Gestation) +Danger, data = data2)
summary(model4c)
plot(model4c, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(model3c), type ='h', col='red')
model4c <- lm(Dreaming ~ log(BodyWt) +log(BrainWt) +log(LifeSpan) +log(Gestation) +Danger, data = data2)
summary(model4c)
plot(model4c, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(model3c), type ='h', col='red')
finalmodel <- lm(log(Dreaming) ~ log(BodyWt) + log(BrainWt) + log(LifeSpan) + log(Gestation) + Danger, data = data2)
summary(finalmodel)
plot(finalmodel, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(finalmodel), type ='h', col='red')
finalmodel <- lm(log(NonDreaming) ~ log(BodyWt) + log(BrainWt) + log(LifeSpan) + log(Gestation) + Danger, data = data)
summary(finalmodel)
plot(finalmodel, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(finalmodel), type ='h', col='red')
finalmodel <- lm(log(Dreaming) ~ log(BodyWt) + log(BrainWt) + log(LifeSpan) + log(Gestation) + Danger, data = data2)
summary(finalmodel)
plot(finalmodel, cook.levels = c(4/42,0.5,1))
plot(cooks.distance(finalmodel), type ='h', col='red')
getwd()
cwd("/home/jfftilton/gitClones/omsa/regression/midterm")
setwd("/home/jfftilton/gitClones/omsa/regression/midterm")
data = read.csv("abb.csv", header = TRUE, sep = ',')
head(data)
model1 = lm(prixe ~ room_type + reviews + overall_satisfaction + accommodates + bedrooms, data= data
)
model1 = lm(prise ~ room_type + reviews + overall_satisfaction + accommodates + bedrooms, data= data)
model1 = lm(price ~ room_type + reviews + overall_satisfaction + accommodates + bedrooms, data= data)
summary(model1)
plot(cooks.distance(model1), type ='h', col='red')
cooks.distance(model1)
data[-94,]
test = data[-94,]
test[94]
test[94,]
test = test[-95,]
test[94,]
test[93,]
test[96,]
test = data[-94,]
test = data[-94,]
test = test[-94,]
test[94,]
test[93,]
model2 = lm(test)
model2 = lm(price ~ room_type + reviews + overall_satisfaction + accommodates + bedrooms, data= test)
summary(model)
summary(model2)
confint(model2, level = .95)
predict(model, data.frame(bedrooms=1,accommodates=2, reviews=92, overall_satisfaction=3.5, room_type="Private room"), interval="prediction")
predict(model2, data.frame(bedrooms=1,accommodates=2, reviews=92, overall_satisfaction=3.5, room_type="Private room"), interval="prediction")
